using System;
using System.Collections.Generic;
using System.IO;
using System.Text;

namespace CSVGenerator
{
    /// <summary>
    /// Read requests from files generated by legacy system
    /// </summary>
    public static class RequestReader
    {
        /// <summary>
        /// Reads request for generating CSV files containing vouchers
        /// Requests are made by a legacy system which may contain:
        /// 
        /// vouchers by date range
        /// dateRangeOrIDsArgument=17/05/2018-20/05/2018
        /// 
        /// vouchers by IDs range
        /// dateRangeOrIDsArgument=35910-36000
        /// 
        /// on or more specific vouchers IDs separated by comma:
        /// dateRangeOrIDsArgument=35100,44200
        /// </summary>
        /// <param name="requestsPath"></param>
        /// <returns>list of arguments for each request</returns>
        public static HashSet<string> ReadFileGenerationRequests(string requestsPath) {
            var argumentList = new HashSet<string>();
            var archivos = Directory.GetFiles(requestsPath);
            foreach (var pedido in archivos) {
                string argument = File.ReadAllText(pedido);
                //ignores arguments that are not in the expected format
                if (argument.IndexOf("=") == -1 || argument.IndexOf("dateRangeOrIDsArgument") == -1)
                    continue;
                argumentList.Add(argument.Split("=")[1]);
            }
            return argumentList;
        }

        public static void DeleteFileGenerationRequests(string requestsPath) {
            string filesToDelete = @"request*.txt";   
            string[] fileList = Directory.GetFiles(requestsPath, filesToDelete);
            foreach (string file in fileList)
            {
                File.Delete(file);
            }
            
        }
    }
}
